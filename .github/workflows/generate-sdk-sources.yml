name: Generate SDK Sources

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows this workflow to run manually from the Actions tab
  workflow_dispatch:
    inputs:
      apiLevel:
        description: 'API Level'     
        required: true
        default: '31'
      branch:
        description: 'Source Branch'
        required: true
        default: 'android-s-beta-5'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

      - run: mkdir android-sdk-source && cd "$_"

      - run: mkdir -p frameworks/base

      - name: Fetch sources from Google
        run: |
          git clone https://github.com/aosp-mirror/platform_frameworks_base.git --branch ${{ github.event.inputs.branch }} --depth 1 frameworks/base
          git clone https://android.googlesource.com/platform/libcore --branch ${{ github.event.inputs.branch }} --depth 1
          git clone https://github.com/aosp-mirror/platform_development.git --branch ${{ github.event.inputs.branch }} --depth 1
          
      - name: Create a basic source.properties file
        run: echo -e "Pkg.UserSrc=false\nPkg.Revision=0\nAndroidVersion.ApiLevel=${{ github.event.inputs.apiLevel }}" > source.properties
        
      - name: Modify the script to create a sources ZIP to use "android-${{ github.event.inputs.apiLevel }}" as top-level directory
        run: cat development/build/tools/mk_sources_zip.py | sed -e 's/TOP_FOLDER = .*/TOP_FOLDER = "android-${{ github.event.inputs.apiLevel }}"/' > my_mk_sources_zip.py
        
      - name: Generate the ZIP
        run: python my_mk_sources_zip.py -z source.properties sources-${{ github.event.inputs.apiLevel }}.zip .
        
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.apiLevel }}_${{ github.event.inputs.branch }}
          name: Sources for Android ${{ github.event.inputs.apiLevel }}
          files: sources-${{ github.event.inputs.apiLevel }}.zip
          fail_on_unmatched_files: true
